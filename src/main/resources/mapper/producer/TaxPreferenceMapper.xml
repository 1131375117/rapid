<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.huacloud.taxpreference.services.producer.mapper.TaxPreferenceMapper">
    <insert id="insertTaxPreference" keyProperty="id" useGeneratedKeys="true"
            parameterType="cn.huacloud.taxpreference.services.producer.entity.dos.TaxPreferenceDO">
        insert into t_tax_preference (tax_categories_names, tax_categories_codes, taxpayer_register_type_name,
                                      taxpayer_register_type_code, taxpayer_type_name, taxpayer_type_code,
                                      industry_names, industry_codes, enterprise_type,
                                      tax_preference_name, keep_query_data,
                                      submit_tax_data, submit_time_limit, submit_description, create_time, update_time,
                                      deleted)
        values (#{taxCategoriesNames}, #{taxCategoriesCodes}, #{taxpayerRegisterTypeName},
                #{taxpayerRegisterTypeCode}, #{taxpayerTypeName}, #{taxpayerTypeCode},
                #{industryNames}, #{industryCodes},
                #{enterpriseType}, #{taxPreferenceName},
                #{keepQueryData}, #{submitTaxData},
                #{submitTimeLimit}, #{submitDescription}, #{createTime},
                #{updateTime}, #{deleted})
    </insert>
    <update id="updateDeletedById">
        update t_tax_preference
        set deleted=1
        where id = #{id}
    </update>
    <select id="queryTaxPreferenceVOList"
            resultType="cn.huacloud.taxpreference.services.producer.entity.vos.QueryTaxPreferencesVO">
        select p.id,p.tax_preference_name as taxPreferenceName,p.industry_names as industryNames ,p.taxpayer_type_name
        as taxpayerTypeName,
        p.tax_categories_names as taxCategoriesNames,p.enterprise_type as enterpriseType,
        p.validity,p.create_time as createTime,
        p.taxpayer_register_type_name as taxpayerRegisterTypeName,
        p.tax_preference_status as taxPreferenceStatus,
        tsc.requirement as taxpayerCreditRatings
        from t_tax_preference p left join t_submit_condition tsc
        on p.id=tsc.tax_preference_id and p.deleted=0 and tsc.condition_name='纳税信用等级'
        <where>
            <if test="queryTaxPreferencesDTO.keyword!=null and queryTaxPreferencesDTO.keyword!= ''">
                and p.tax_preference_name like "%"#{queryTaxPreferencesDTO.keyword}"%"
            </if>
            <if test="queryTaxPreferencesDTO.enterpriseType!=null and queryTaxPreferencesDTO.enterpriseType!=''">
                and p.enterprise_type like "%"#{queryTaxPreferencesDTO.enterpriseType}"%"
            </if>
        <!--    <if test="queryTaxPreferencesDTO.taxCategoriesCodes != null and queryTaxPreferencesDTO.taxCategoriesCodes != '' ">
                and p.tax_categories_codes= #{queryTaxPreferencesDTO.taxCategoriesCodes}
            </if>-->
            <if test="queryTaxPreferencesDTO.taxpayerRegisterTypeCode != null and queryTaxPreferencesDTO.taxpayerRegisterTypeCode != '' ">
                and p.taxpayer_register_type_code=#{queryTaxPreferencesDTO.taxpayerRegisterTypeCode}
            </if>
            <if test="queryTaxPreferencesDTO.taxpayerTypeCode != null and queryTaxPreferencesDTO.taxpayerTypeCode != '' ">
                and p.taxpayer_type_code=#{queryTaxPreferencesDTO.taxpayerTypeCode}
            </if>
            <if test="queryTaxPreferencesDTO.validity!=null">
                and p.validity=#{queryTaxPreferencesDTO.validity}
            </if>
            <if test="queryTaxPreferencesDTO.releaseMatter!=null">
                and p.input_user_id=#{userId} and tax_preference_status=#{queryTaxPreferencesDTO.releaseMatter}
            </if>
            <if test="queryTaxPreferencesDTO.startTime!=null ">
                and p.create_time >= #{queryTaxPreferencesDTO.startTime}
            </if>
            <if test="queryTaxPreferencesDTO.endTime!=null ">
                and p.create_time &lt;= #{queryTaxPreferencesDTO.endTime}
            </if>

            <if test="queryTaxPreferencesDTO.taxpayerCreditRatings!=null and queryTaxPreferencesDTO.taxpayerCreditRatings.size>0 ">
                and (1!=1
                <foreach collection="queryTaxPreferencesDTO.taxpayerCreditRatings" item="credit">
                    or FIND_IN_SET(#{credit},tsc.requirement)
                </foreach>
                )

            </if>
            <if test="queryTaxPreferencesDTO.taxCategoriesCodes!=null and queryTaxPreferencesDTO.taxCategoriesCodes.size>0 ">
                and (1!=1
                <foreach collection="queryTaxPreferencesDTO.taxCategoriesCodes" item="taxCategories">
                    or FIND_IN_SET(#{taxCategories},p.tax_categories_codes)
                </foreach>
                )
            </if>

            <if test=" queryTaxPreferencesDTO.industryCodes!=null and queryTaxPreferencesDTO.industryCodes.size>0 ">
                and (1!=1
                <foreach collection="queryTaxPreferencesDTO.industryCodes" item="industryCode">
                    or FIND_IN_SET(#{industryCode},p.industry_codes)
                </foreach>
                )
            </if>


        </where>
        order by ${sort} DESC

    </select>

    <select id="selectByIdList" resultType="cn.huacloud.taxpreference.services.producer.entity.dos.TaxPreferenceDO"
            parameterType="long">
        SELECT tp.id                  as id,
               tp.tax_preference_name as taxPreferenceName,
               tp.validity            as validity
        FROM t_tax_preference tp
                 LEFT JOIN t_tax_preference_policies ttp ON ttp.tax_preference_id = tp.id
                 LEFT JOIN t_policies t ON t.id = ttp.policies_id
            AND tp.deleted = 0
        WHERE t.id = #{policiesId}
    </select>

    <select id="selectTaxPreferenceId"
            resultType="cn.huacloud.taxpreference.services.producer.entity.vos.TaxPreferenceCountVO">
        SELECT count(ttp.tax_preference_id) AS count,
               ttp.tax_preference_id,
               t.tax_preference_name
        FROM t_tax_preference_policies ttp
                 LEFT JOIN t_tax_preference t ON t.id = ttp.tax_preference_id
        WHERE ttp.tax_preference_id IN
              (SELECT tax_preference_id FROM t_tax_preference_policies WHERE policies_id = #{policiesId})
          and t.tax_preference_status = 'RELEASED'
        GROUP BY ttp.tax_preference_id
    </select>
</mapper>